using AlexaVoxCraft.Model.Response;

namespace AlexaVoxCraft.MediatR.Pipeline;

/// <summary>
/// Defines an interceptor that processes responses after they are generated by the main request handler.
/// Response interceptors are useful for cross-cutting concerns such as response logging, 
/// response modification, analytics, or response validation.
/// </summary>
public interface IResponseInterceptor
{
    /// <summary>
    /// Processes the response after it has been generated by the main handler.
    /// This method can perform logging, response modification, analytics tracking,
    /// or other post-processing operations.
    /// </summary>
    /// <param name="input">The handler input containing the original request and utilities.</param>
    /// <param name="output">The response generated by the main handler.</param>
    /// <param name="cancellationToken">A cancellation token to cancel the operation.</param>
    /// <returns>A task that represents the asynchronous processing operation.</returns>
    Task Process(IHandlerInput input, SkillResponse output, CancellationToken cancellationToken = default);
}